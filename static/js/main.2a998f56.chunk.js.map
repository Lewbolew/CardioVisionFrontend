{"version":3,"sources":["ui/images/logo-short.svg","ui/images/logo-full.svg","ui/components/atoms/InputBox.tsx","ui/components/atoms/BasicButton.tsx","ui/components/atoms/Anchor.tsx","ui/components/atoms/WarningMessage.tsx","features/login/components/molecules/LoginForm.tsx","features/login/components/organisms/LoginContainer.tsx","features/login/helper.ts","features/login/pages/index.tsx","features/home/pages/index.tsx","features/register/components/molecules/RegisterForm.tsx","features/register/components/organisms/RegisterContainer.tsx","features/register/pages/index.tsx","features/register/helper.ts","features/patients/molecules/PatientItem.tsx","features/patients/molecules/PatientsList.tsx","features/patients/pages/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputBox","Input","placeholder","this","props","value","onChange","onClick","event","preventDefault","type","name","readOnly","React","styled","input","BasicButton","Button","disabled","style","cursor","title","button","StyledAnchor","a","P","p","WarningMessage","text","FlexWrapper","div","Heading","h1","A","InputWrapper","PolicyWrapper","StyledContainer","LoginForm","email","handleInputChange","password","checkedPolicy","togglePolicy","handleLogIn","errors","marginLeft","length","history","push","checked","href","StyledImg","img","LoginContainer","src","logo","alt","checkLoginFields","Login","newState","state","key","target","setState","location","match","Component","HomeWrapper","ButtonWrapper","Home","RegisterForm","confirm","handleRegister","RegisterContainer","Register","checkRegisterFields","PatientItem","patient","mrn","priority","stenosisScore","studyTime","TableHeader","PatientsList","patientsList","map","temporaryPatients","Patients","compare","b","sort","Wrapper","App","className","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a998f56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-short.2b76f8db.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-full.8915baec.svg\";","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\ntype ExpandedOnChangeProps = {\r\n    placeholder?: string;\r\n    value?: string;\r\n    name?: string;\r\n    readOnly?: boolean;\r\n    type?: string;\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => any;\r\n};\r\n\r\nclass InputBox extends React.Component<ExpandedOnChangeProps> {\r\n    render() {\r\n        return (\r\n            <Input\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n                onClick={(event) => {\r\n                    event.preventDefault();\r\n                }}\r\n                type={this.props.type}\r\n                name={this.props.name}\r\n                readOnly={this.props.readOnly}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputBox;\r\n\r\nconst Input = styled.input`\r\n  outline: none !important;\r\n  border: none;\r\n  width: 100%;\r\n  color: #333;\r\n  padding: 12px 6px;\r\n  font-size: 16px;\r\n  background-color: #f4f4f4;\r\n  font-weight: 300;\r\n  &::-webkit-input-placeholder {\r\n    font-size: 16px;\r\n    color: #707070;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\ntype ExpandedOnChangeProps = {\r\n    title?: string;\r\n    name?: string;\r\n    disabled?: boolean;\r\n    onClick: () => void;\r\n};\r\n\r\nclass BasicButton extends React.Component<ExpandedOnChangeProps> {\r\n    render() {\r\n        return (\r\n            <Button\r\n                onClick={(event) => {\r\n                    this.props.onClick();\r\n                }}\r\n                disabled={this.props.disabled}\r\n                style={{cursor: this.props.disabled? 'not-allowed' : 'pointer'}}\r\n            >{this.props.title}</Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n\r\nconst Button = styled.button`\r\n  outline: none !important;\r\n  border: none;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  color: #fff;\r\n  background: #666;\r\n  padding: 12px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nconst StyledAnchor = styled.a`\r\n    color: #7569ff;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`;\r\nexport default StyledAnchor;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\ntype Props = {\r\n    text?: string;\r\n    style?: any;\r\n};\r\n\r\nconst WarningMessage = (props: Props) => {\r\n    return (\r\n        <P style={props.style}>\r\n            {props.text}\r\n        </P>\r\n    );\r\n}\r\n\r\nconst P = styled.p`\r\n    color: red;\r\n    margin: 0;\r\n`;\r\n\r\nexport default WarningMessage;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport InputBox from \"../../../../ui/components/atoms/InputBox\";\r\nimport BasicButton from \"../../../../ui/components/atoms/BasicButton\";\r\nimport StyledAnchor from \"../../../../ui/components/atoms/Anchor\";\r\nimport WarningMessage from \"../../../../ui/components/atoms/WarningMessage\";\r\nimport {LoginErrors} from \"../../interfaces\";\r\ntype Props = {\r\n    email: string;\r\n    password: string;\r\n    checkedPolicy: boolean;\r\n    history: any;\r\n    errors?: LoginErrors;\r\n    handleLogIn: () => void;\r\n    togglePolicy: () => void;\r\n    handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst LoginForm = (props: Props) => {\r\n    const {email, handleInputChange, password, checkedPolicy, togglePolicy, handleLogIn,errors} = props;\r\n    return (\r\n        <StyledContainer>\r\n            <Heading>Login</Heading>\r\n            <InputWrapper>\r\n                <P>Email:</P>\r\n                <InputBox\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                    name='email'\r\n                    placeholder='you@somemail.com'\r\n                />\r\n            </InputWrapper>\r\n            <WarningMessage style={{marginLeft: '100px'}} text={errors?.email} />\r\n            <InputWrapper>\r\n                <P>Password:</P>\r\n                <InputBox\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                    type={password.length === 0 ? 'text' : 'password'}\r\n                    name='password'\r\n                    placeholder='pass....'\r\n                />\r\n            </InputWrapper>\r\n            <WarningMessage style={{marginLeft: '100px'}} text={errors?.password} />\r\n            <FlexWrapper>\r\n                <StyledAnchor onClick={() => {props.history.push('/register')}}>Create an account</StyledAnchor>\r\n                <A>Forgot password?</A>\r\n            </FlexWrapper>\r\n            <PolicyWrapper>\r\n                <input type=\"checkbox\" checked={checkedPolicy} onChange={togglePolicy}/>\r\n                <span>I accept the </span>\r\n                <StyledAnchor href=\"/\"> Terms of Service </StyledAnchor>\r\n                <span>GDPR complaint</span>\r\n            </PolicyWrapper>\r\n            <BasicButton\r\n                onClick={handleLogIn}\r\n                title='LOG IN'\r\n                name='login'\r\n                disabled={!checkedPolicy}\r\n            />\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nconst FlexWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 18px 0 8px 0;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n    text-transform: uppercase;\r\n    color: #333333;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst A = styled(StyledAnchor)`\r\n    align-self: flex-end;\r\n`;\r\n\r\nconst P = styled.p`\r\n    color: #333333;\r\n    margin: 0;\r\n    font-size: 1.1em;\r\n    line-height: 40px;\r\n    width: 120px;\r\n    margin-right: 12px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n    display: flex;\r\n    margin-top: 16px;\r\n`;\r\n\r\nconst PolicyWrapper = styled(InputWrapper)`\r\n    margin-bottom: 12px;\r\n    align-self: center;\r\n    & > a {\r\n        margin: 0 4px;\r\n    }\r\n    & > input {\r\n        margin-top: auto;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    width: 380px;\r\n    display:flex;\r\n    flex-direction: column;\r\n    & > button {\r\n        width: 140px;\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nexport default LoginForm;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport logo from '../../../../ui/images/logo-short.svg'\r\nimport LoginForm from \"../molecules/LoginForm\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {LoginErrors} from \"../../interfaces\";\r\n\r\ntype Props = {\r\n    email: string;\r\n    password: string;\r\n    errors?: LoginErrors;\r\n    checkedPolicy: boolean;\r\n    togglePolicy: () => void;\r\n    handleLogIn: () => void;\r\n    handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nfunction LoginContainer(props: Props & RouteComponentProps) {\r\n    const {email, password, checkedPolicy, handleInputChange,togglePolicy,handleLogIn,errors} = props;\r\n    return (\r\n        <StyledContainer>\r\n            <StyledImg src={logo} alt=\"logo\" onClick={() => {props.history.push(\"/\")}} />\r\n            <LoginForm\r\n                email={email}\r\n                history={props.history}\r\n                errors={errors}\r\n                password={password}\r\n                checkedPolicy={checkedPolicy}\r\n                handleInputChange={handleInputChange}\r\n                handleLogIn={handleLogIn}\r\n                togglePolicy={togglePolicy}\r\n            />\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 40px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    cursor: pointer;\r\n    width: 60px;\r\n`;\r\n\r\nexport default LoginContainer;\r\n","import {LoginErrors} from \"./interfaces\";\r\n\r\n\r\nexport function checkLoginFields(email: string, password: string):LoginErrors {\r\n    const fieldRequired = \"This field is required\";\r\n    let errors:LoginErrors = {};\r\n    if(email.length === 0){\r\n        errors.email = fieldRequired;\r\n    }\r\n    if(password.length === 0) {\r\n        errors.password = fieldRequired;\r\n    }\r\n    return errors;\r\n}\r\n","import React, { Component } from 'react';\r\nimport LoginContainer from \"../components/organisms/LoginContainer\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {LoginErrors, LoginInputTypes} from \"../interfaces\";\r\nimport {checkLoginFields} from \"../helper\";\r\n\r\n\r\n\r\ntype Props = {\r\n    test: boolean;\r\n};\r\n\r\n\r\n\r\ntype State = {\r\n    email: string;\r\n    password: string\r\n    errors?: LoginErrors;\r\n    checkedPolicy: boolean;\r\n};\r\n\r\nclass Login extends Component<Props & RouteComponentProps, State> {\r\n    constructor(props:Props & RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            checkedPolicy: false,\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\r\n        const newState: State = { ...this.state };\r\n        const key:LoginInputTypes = event.target.name as LoginInputTypes;\r\n        newState[key] = event.target.value;\r\n        if(newState.errors)\r\n            newState.errors[key] = '';\r\n        this.setState({\r\n            ...newState\r\n        })\r\n    };\r\n\r\n    togglePolicy = () => {\r\n      this.setState({\r\n          checkedPolicy: !this.state.checkedPolicy,\r\n      })\r\n    };\r\n\r\n\r\n\r\n    handleLogIn = () => {\r\n        const errors: LoginErrors = checkLoginFields(this.state.email, this.state.password);\r\n        if((errors.email && errors.email.length > 0) ||\r\n            (errors.password && errors.password.length > 0)){\r\n            this.setState({errors});\r\n            return;\r\n        }\r\n        // call of the login api here ---\r\n        this.props.history.push(\"/patients\");\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        const {email, password,checkedPolicy, errors} = this.state;\r\n        return (\r\n            <LoginContainer\r\n                history={this.props.history}\r\n                location={this.props.location}\r\n                match={this.props.match}\r\n                email={email}\r\n                errors={errors}\r\n                password={password}\r\n                handleInputChange={this.handleInputChange}\r\n                togglePolicy={this.togglePolicy}\r\n                handleLogIn={this.handleLogIn}\r\n                checkedPolicy={checkedPolicy}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport logo from '../../../ui/images/logo-full.svg'\r\nimport BasicButton from \"../../../ui/components/atoms/BasicButton\";\r\n\r\n\r\nfunction Home(props:any) {\r\n    return (\r\n        <HomeWrapper>\r\n            <FlexWrapper>\r\n                <StyledImg src={logo} alt=\"logo\" />\r\n                <ButtonWrapper>\r\n                    <BasicButton\r\n                        onClick={() => {props.history.push(\"/login\")}}\r\n                        title='LOGIN'\r\n                    />\r\n                    <BasicButton\r\n                        onClick={() => {props.history.push('/register')}}\r\n                        title='REGISTER'\r\n                    />\r\n                </ButtonWrapper>\r\n            </FlexWrapper>\r\n        </HomeWrapper>\r\n    );\r\n}\r\n\r\nconst HomeWrapper = styled.div`\\\r\n    margin-top: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst FlexWrapper = styled.div`\r\n    width: 360px;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    & > button {\r\n        width: 120px;\r\n    }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    width: 360px;\r\n    margin-bottom: 24px;\r\n`;\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport InputBox from \"../../../../ui/components/atoms/InputBox\";\r\nimport BasicButton from \"../../../../ui/components/atoms/BasicButton\";\r\nimport StyledAnchor from \"../../../../ui/components/atoms/Anchor\";\r\nimport {RegisterErrors} from \"../../interfaces\";\r\nimport WarningMessage from \"../../../../ui/components/atoms/WarningMessage\";\r\ntype Props = {\r\n    email: string;\r\n    password: string;\r\n    confirm: string;\r\n    errors?: RegisterErrors;\r\n    history: any;\r\n    checkedPolicy: boolean;\r\n    handleRegister: () => void;\r\n    togglePolicy: () => void;\r\n    handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst RegisterForm = (props: Props) => {\r\n    const {email, handleInputChange, password, confirm, errors,checkedPolicy, togglePolicy, handleRegister} = props;\r\n    return (\r\n        <StyledContainer>\r\n            <Heading>Register</Heading>\r\n            <InputWrapper>\r\n                <P>Email:</P>\r\n                <InputBox\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                    name='email'\r\n                    placeholder='you@somemail.com'\r\n                />\r\n            </InputWrapper>\r\n            <WarningMessage style={{marginLeft: '100px'}} text={errors?.email} />\r\n            <InputWrapper>\r\n                <P>Password:</P>\r\n                <InputBox\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                    type={password.length === 0 ? 'text' : 'password'}\r\n                    name='password'\r\n                    placeholder='pass....'\r\n                />\r\n            </InputWrapper>\r\n            <WarningMessage style={{marginLeft: '100px'}} text={errors?.password} />\r\n            <InputWrapper>\r\n                <P>Confirm:</P>\r\n                <InputBox\r\n                    onChange={handleInputChange}\r\n                    value={confirm}\r\n                    type={confirm.length === 0 ? 'text' : 'password'}\r\n                    name='confirm'\r\n                    placeholder='confirm password'\r\n                />\r\n            </InputWrapper>\r\n            <WarningMessage style={{marginLeft: '100px'}} text={errors?.confirm} />\r\n            <A onClick={() => {props.history.push('/login')}}>Sign in instead</A>\r\n            <PolicyWrapper>\r\n                <input type=\"checkbox\" checked={checkedPolicy} onChange={togglePolicy}/>\r\n                <span>I accept the </span>\r\n                <StyledAnchor> Terms of Service </StyledAnchor>\r\n            </PolicyWrapper>\r\n            <BasicButton\r\n                onClick={handleRegister}\r\n                title='REGISTER'\r\n                name='register'\r\n                disabled={!checkedPolicy}\r\n            />\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst Heading = styled.h1`\r\n    text-transform: uppercase;\r\n    color: #333333;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nconst A = styled(StyledAnchor)`\r\n    align-self: flex-end;\r\n    margin: 24px 0;\r\n`;\r\n\r\nconst P = styled.p`\r\n    color: #333333;\r\n    margin: 0;\r\n    font-size: 1.1em;\r\n    line-height: 40px;\r\n    width: 120px;\r\n    margin-right: 12px;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n    display: flex;\r\n    margin-top: 16px;\r\n`;\r\n\r\nconst PolicyWrapper = styled(InputWrapper)`\r\n    margin: 0;\r\n    margin-bottom: 12px;\r\n    align-self: center;\r\n    & > a {\r\n        margin: 0 4px;\r\n    }\r\n    & > input {\r\n        margin-top: auto;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    width: 380px;\r\n    display:flex;\r\n    flex-direction: column;\r\n    & > button {\r\n        width: 140px;\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nexport default RegisterForm;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport logo from '../../../../ui/images/logo-short.svg'\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport RegisterForm from \"../molecules/RegisterForm\";\r\nimport {RegisterErrors} from \"../../interfaces\";\r\n\r\ntype Props = {\r\n    email: string;\r\n    password: string;\r\n    checkedPolicy: boolean;\r\n    confirm: string;\r\n    errors?: RegisterErrors;\r\n    togglePolicy: () => void;\r\n    handleRegister: () => void;\r\n    handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nfunction RegisterContainer(props: Props & RouteComponentProps) {\r\n    const {email, password, confirm, errors,checkedPolicy, handleInputChange,togglePolicy,handleRegister} = props;\r\n    return (\r\n        <StyledContainer>\r\n            <StyledImg src={logo} alt=\"logo\" onClick={() => {props.history.push(\"/\")}} />\r\n            <RegisterForm\r\n                email={email}\r\n                history={props.history}\r\n                password={password}\r\n                checkedPolicy={checkedPolicy}\r\n                confirm={confirm}\r\n                errors={errors}\r\n                handleInputChange={handleInputChange}\r\n                handleRegister={handleRegister}\r\n                togglePolicy={togglePolicy}\r\n            />\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 40px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    cursor: pointer;\r\n    width: 60px;\r\n`;\r\n\r\nexport default RegisterContainer;\r\n","import React, { Component } from 'react';\r\nimport RegisterContainer from \"../components/organisms/RegisterContainer\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {RegisterErrors, RegisterInputTypes} from \"../interfaces\";\r\nimport {checkRegisterFields} from \"../helper\";\r\n\r\n\r\ntype Props = {\r\n    test: boolean;\r\n};\r\n\r\n\r\ntype State = {\r\n    email: string;\r\n    password: string;\r\n    confirm: string;\r\n    errors?: RegisterErrors;\r\n    checkedPolicy: boolean;\r\n};\r\n\r\nclass Register extends Component<Props & RouteComponentProps, State> {\r\n    constructor(props:Props & RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirm: '',\r\n            checkedPolicy: false,\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\r\n        const newState: State = { ...this.state };\r\n        const key:RegisterInputTypes = event.target.name as RegisterInputTypes;\r\n        newState[key] = event.target.value;\r\n        this.setState({\r\n            ...newState\r\n        })\r\n    };\r\n\r\n    togglePolicy = () => {\r\n        this.setState({\r\n            checkedPolicy: !this.state.checkedPolicy,\r\n        })\r\n    };\r\n\r\n\r\n\r\n    handleRegister = () => {\r\n        const errors: RegisterErrors = checkRegisterFields(this.state.email, this.state.password, this.state.confirm);\r\n        if((errors.email && errors.email.length > 0) ||\r\n            (errors.password && errors.password.length > 0) ||\r\n            (errors.confirm && errors.confirm.length > 0)\r\n        ){\r\n            this.setState({errors});\r\n            return;\r\n        }\r\n        // call of the register api here ---\r\n        this.props.history.push(\"/patients\");\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        const {email, password,checkedPolicy, errors,confirm} = this.state;\r\n        return (\r\n            <RegisterContainer\r\n                history={this.props.history}\r\n                location={this.props.location}\r\n                match={this.props.match}\r\n                email={email}\r\n                password={password}\r\n                checkedPolicy={checkedPolicy}\r\n                confirm={confirm}\r\n                togglePolicy={this.togglePolicy}\r\n                handleInputChange={this.handleInputChange}\r\n                handleRegister={this.handleRegister}\r\n                errors={errors}\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import {checkLoginFields} from \"../login/helper\";\r\nimport {RegisterErrors} from \"./interfaces\";\r\n\r\nexport function checkRegisterFields(email: string, password: string, confirm: string):RegisterErrors {\r\n    let errors:RegisterErrors = checkLoginFields(email,password);\r\n    if(confirm.length === 0)\r\n        errors.confirm = 'This field is required';\r\n    if(password !== confirm)\r\n        errors.confirm = \"Didn't match with the password\";\r\n    return errors;\r\n}\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport {Patient} from \"../interfaces\";\r\n\r\ntype Props = {\r\n    patient: Patient;\r\n};\r\n\r\nconst PatientItem = (props: Props) => {\r\n    const {patient} = props;\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <P>{patient.mrn}</P>\r\n                <P>{patient.priority}</P>\r\n                <P>{patient.stenosisScore}</P>\r\n                <P>{patient.studyTime}</P>\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst P = styled.p`\r\n    color: #333;\r\n    width: 70px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    display:flex;\r\n    padding: 4px 36px;\r\n    margin-top: 12px;\r\n    justify-content: space-between;\r\n    box-shadow: 0px 2px 4px -1px #00000026;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    transition: 0.1s;\r\n    &:hover {\r\n        background: #a5a5a561;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport default PatientItem;\r\n","import * as React from 'react';\r\n// @ts-ignore\r\nimport styled from '@emotion/styled';\r\nimport {Patient} from \"../interfaces\";\r\nimport PatientItem from \"./PatientItem\";\r\n\r\ntype Props = {\r\n    patientsList: Patient[];\r\n};\r\n\r\nconst PatientsList = (props: Props) => {\r\n    const {patientsList} = props;\r\n    return (\r\n        <>\r\n            <StyledContainer>\r\n                <TableHeader>\r\n                    <P>Patient ID</P>\r\n                    <P>Priority</P>\r\n                    <P>stenosisScore</P>\r\n                    <P>studyTime</P>\r\n                </TableHeader>\r\n                {patientsList.map(patient => {\r\n                    return (\r\n                        <PatientItem patient={patient} />\r\n                    )\r\n                })}\r\n            </StyledContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n    width: 560px;\r\n    padding: 6px;\r\n    display:flex;\r\n    flex-direction: column;\r\n    border-radius: 4px;\r\n`;\r\nconst TableHeader = styled.div`\r\n    display: flex;\r\n    padding: 0 36px;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst P = styled.p`\r\n    width: 80px;\r\n`;\r\n\r\nexport default PatientsList;\r\n","import React, { Component } from 'react';\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {Patient} from \"../interfaces\";\r\nimport PatientsList from \"../molecules/PatientsList\";\r\nimport logo from '../../../ui/images/logo-short.svg'\r\nimport styled from '@emotion/styled';\r\n\r\ntype Props = {\r\n    test: boolean;\r\n};\r\n\r\nconst temporaryPatients: Patient[] = [\r\n    {mrn: 1,priority: 2, stenosisScore: 25, studyTime: '2 days'},\r\n    {mrn: 2,priority: 5, stenosisScore: 2, studyTime: '5 days'},\r\n    {mrn: 3,priority: 1, stenosisScore: 30, studyTime: '3 days'},\r\n    {mrn: 4,priority: 24, stenosisScore: 8, studyTime: '1 month'},\r\n    {mrn: 5,priority: 7, stenosisScore: 2, studyTime: '14 days'},\r\n];\r\n\r\ntype State = {\r\n    patientsList: Patient[];\r\n};\r\n\r\nclass Patients extends Component<Props & RouteComponentProps, State> {\r\n    constructor(props:Props & RouteComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            patientsList: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        let patientsList = temporaryPatients.sort(this.compare);\r\n\r\n        this.setState({\r\n            patientsList,\r\n        })\r\n    }\r\n\r\n    compare = (a:Patient, b:Patient) =>  {\r\n        if (a.priority > b.priority) return 1;\r\n        if (b.priority > a.priority) return -1;\r\n        return 0;\r\n    };\r\n\r\n    render() {\r\n        const {patientsList} = this.state;\r\n        return (\r\n            <Wrapper>\r\n                <StyledImg src={logo} alt=\"logo\"/>\r\n                <Heading>Patients List</Heading>\r\n                <PatientsList patientsList={patientsList} />\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst Heading = styled.h1`\r\n    color: #333;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n    width: 60px;\r\n`;\r\n\r\nexport default Patients;\r\n","import React from 'react';\r\nimport { Route, BrowserRouter , Switch } from 'react-router-dom';\r\nimport Login from './features/login/pages';\r\nimport Home from './features/home/pages';\r\nimport Register from \"./features/register/pages\";\r\nimport Patients from \"./features/patients/pages\";\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/login\" exact component={Login} />\r\n                <Route path=\"/register\" exact component={Register} />\r\n                <Route path=\"/patients\" exact component={Patients} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config : any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: any, config: any) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: any) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}